version: '3.4'

services:
  zmc-redis:
    image: '${DOCKER_REPO_NS}/zmc-redis:${DOCKER_BUILD_TAG}'
    hostname: redis
    build:
      context: "."
      dockerfile: 'redis/Dockerfile'
      args:
        - BASE=4.0.9
    volumes:
      - /proc:/writable-proc
      - /sys:/writable-sys
    deploy:
      mode: replicated
      replicas: 1

  zmc-ldap:
    image: '${DOCKER_REPO_NS}/zmc-ldap:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-ldap'
    build:
      context: '.'
      dockerfile: 'ldap/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-ldap:${DOCKER_CACHE_TAG}' ]
      args:
         DOCKER_REPO_NS: '${DOCKER_REPO_NS}'
         DOCKER_BUILD_TAG: '${DOCKER_BUILD_TAG}'
    configs:
      - domain_name
    secrets:
      - ca.key
      - ca.pem
      - ldap.key
      - ldap.crt
      - ldap.master_password
      - ldap.root_password
      - ldap.replication_password
      - ldap.postfix_password
      - ldap.amavis_password
      - ldap.nginx_password
    volumes:
      - ldapvolume:/opt/zimbra/data/ldap/mdb/db

  zmc-mta:
    image: '${DOCKER_REPO_NS}/zmc-mta:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-mta'
    build:
      context: '.'
      dockerfile: 'mta/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-mta:${DOCKER_CACHE_TAG}' ]
      args:
         DOCKER_REPO_NS: '${DOCKER_REPO_NS}'
         DOCKER_BUILD_TAG: '${DOCKER_BUILD_TAG}'
    configs:
      - av_notify_email
      - zimbra_ldap_userdn
    ports:
      - '587:587'
    secrets:
      - ca.key
      - ca.pem
      - mta.key
      - mta.crt
      - ldap.master_password
      - ldap.root_password
      - ldap.postfix_password
      - ldap.amavis_password

  zmc-mailbox:
    image: '${DOCKER_REPO_NS}/zmc-mailbox:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-mailbox'
    build:
      context: '.'
      dockerfile: 'mailbox/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-mailbox:${DOCKER_CACHE_TAG}' ]
      args:
         DOCKER_REPO_NS: '${DOCKER_REPO_NS}'
         DOCKER_BUILD_TAG: '${DOCKER_BUILD_TAG}'
    depends_on:
      - zmc-redis
    deploy:
      mode: replicated
      replicas: 2
    healthcheck:
      test: ["CMD-SHELL", "su - zimbra -c 'zmsoap -z PingRequest' | grep -e PingResponse"]
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 240s
    volumes:
      - type: bind
        source: /mnt/blockchain/blob
        target: /opt/zimbra/store
      - type: bind
        source: /mnt/blockchain/tmp
        target: /opt/zimbra/data/tmp
    configs:
      - domain_name
      - admin_account_name
      - spam_account_name
      - ham_account_name
      - virus_quarantine_account_name
      - gal_sync_account_name
    environment:
      - SOLR_MODE=${SOLR_MODE}
    secrets:
      - ca.key
      - ca.pem
      - mailbox.key
      - mailbox.crt
      - ldap.master_password
      - ldap.root_password
      - mysql.password
      - admin_account_password
      - spam_account_password
      - ham_account_password
      - virus_quarantine_account_password

  zmc-mysql:
    image: '${DOCKER_REPO_NS}/zmc-mysql:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-mysql'
    build:
      context: '.'
      dockerfile: 'mysql/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-mysql:${DOCKER_CACHE_TAG}' ]
      args:
         DOCKER_REPO_NS: '${DOCKER_REPO_NS}'
         DOCKER_BUILD_TAG: '${DOCKER_BUILD_TAG}'
    secrets:
      - mysql.password
    volumes:
      - mdbvolume:/opt/zimbra/db/data

  zmc-proxy:
    image: '${DOCKER_REPO_NS}/zmc-proxy:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-proxy'
    build:
      context: '.'
      dockerfile: 'proxy/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-proxy:${DOCKER_CACHE_TAG}' ]
      args:
         DOCKER_REPO_NS: '${DOCKER_REPO_NS}'
         DOCKER_BUILD_TAG: '${DOCKER_BUILD_TAG}'
    volumes:
      - ${LOCAL_SRC_DIR}:/code
    secrets:
      - ca.key
      - ca.pem
      - proxy.key
      - proxy.crt
      - ldap.master_password
      - ldap.root_password
      - ldap.nginx_password
    ports:
      - '8080:80'
      - '8443:443'
      - '9071:9071'

  zmc-solr:
    image: '${DOCKER_REPO_NS}/zmc-solr:${DOCKER_BUILD_TAG}'
    hostname: 'zmc-solr'
    build:
      context: '.'
      dockerfile: 'solr/Dockerfile'
      cache_from: [ '${DOCKER_REPO_NS}/zmc-solr:${DOCKER_CACHE_TAG}' ]
    environment:
      - SOLR_MODE=${SOLR_MODE}
      - SOLR_MEMORY=${SOLR_MEMORY}
    ports:
      - "8983:8983"
    volumes:
      - idxvolume:/opt/solr/server/solr

  zmc-account:
    image: ${DOCKER_REPO_NS}/zmc-account:latest
    hostname: 'zmc-account'
    entrypoint:
      - /app/init
    ports:
      - "8081:5000"

  zm-x-web:
    image: ${DOCKER_REPO_NS}/zm-x-web:latest
    container_name: zm-x-web
    hostname: zm-x-web
    entrypoint:
       - /app/init
    ports:
      - "443:443"

secrets:
   ca.key:
     file: ./.keystore/ca.key
   ca.pem:
     file: ./.keystore/ca.pem
   ldap.key:
     file: ./.keystore/ldap.key
   ldap.crt:
     file: ./.keystore/ldap.crt
   mta.key:
     file: ./.keystore/mta.key
   mta.crt:
     file: ./.keystore/mta.crt
   mailbox.key:
     file: ./.keystore/mailbox.key
   mailbox.crt:
     file: ./.keystore/mailbox.crt
   proxy.key:
     file: ./.keystore/proxy.key
   proxy.crt:
     file: ./.keystore/proxy.crt
   ldap.master_password:
     file: ./.secrets/ldap.master_password
   ldap.root_password:
     file: ./.secrets/ldap.root_password
   ldap.replication_password:
     file: ./.secrets/ldap.replication_password
   ldap.postfix_password:
     file: ./.secrets/ldap.postfix_password
   ldap.amavis_password:
     file: ./.secrets/ldap.amavis_password
   ldap.nginx_password:
     file: ./.secrets/ldap.nginx_password
   mysql.password:
     file: ./.secrets/mysql.password
   admin_account_password:
     file: ./.secrets/admin_account_password
   spam_account_password:
     file: ./.secrets/spam_account_password
   ham_account_password:
     file: ./.secrets/ham_account_password
   virus_quarantine_account_password:
     file: ./.secrets/virus_quarantine_account_password

configs:
   av_notify_email:
     file: ./.config/av_notify_email
   domain_name:
     file: ./.config/domain_name
   admin_account_name:
     file: ./.config/admin_account_name
   spam_account_name:
     file: ./.config/spam_account_name
   ham_account_name:
     file: ./.config/ham_account_name
   virus_quarantine_account_name:
     file: ./.config/virus_quarantine_account_name
   gal_sync_account_name:
     file: ./.config/gal_sync_account_name
   zimbra_ldap_userdn:
     file: ./.config/zimbra_ldap_userdn

volumes:
  ldapvolume: {}
  mdbvolume: {}
  idxvolume: {}
